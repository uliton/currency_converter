{"version":3,"sources":["api.js","App.jsx","index.jsx"],"names":["getCours","fetch","response","json","Error","App","useState","data","setData","leftQuery","setLeftQuery","leftCurrencyRate","setLeftCurrencyRate","rightQuery","setRightQuery","rightCurrencyRate","setRightCurrencyRate","useEffect","then","result","toFixed","usd","find","item","r030","eur","length","className","rate","type","value","debounceTimeout","onChange","e","target","disabled","onClick","undefined","Math","round","selected","map","txt","event","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3152d1b4.chunk.js","sourcesContent":["/* eslint-disable no-console */\nconst NBU_API_URL = 'https://bank.gov.ua/NBUStatService/v1/statdirectory/';\nconst MONO_API_URL = 'https://api.monobank.ua/bank/currency';\n\nexport const getCours = async() => {\n  try {\n    const response = await fetch(`${NBU_API_URL}/exchange?json`);\n\n    return response.json();\n  } catch {\n    throw new Error();\n  }\n};\n\nexport const getHeaderCours = async() => {\n  try {\n    const response = await fetch(`${MONO_API_URL}`);\n\n    return response.json();\n  } catch {\n    throw new Error();\n  }\n};\n","/* eslint-disable no-console */\nimport React, { useEffect, useState } from 'react';\nimport { DebounceInput } from 'react-debounce-input';\nimport { getCours } from './api';\n\nimport './App.scss';\n\nexport const App = () => {\n  const [data, setData] = useState([]);\n\n  const [leftQuery, setLeftQuery] = useState();\n  const [leftCurrencyRate, setLeftCurrencyRate] = useState(0);\n\n  const [rightQuery, setRightQuery] = useState();\n  const [rightCurrencyRate, setRightCurrencyRate] = useState(0);\n\n  useEffect(() => {\n    getCours().then((result) => {\n      setData([...result]);\n    });\n  }, []);\n\n  useEffect(() => {\n    if (!leftQuery && rightQuery) {\n      setLeftQuery(\n        (rightQuery * rightCurrencyRate / leftCurrencyRate).toFixed(2),\n      );\n    }\n\n    if (leftQuery && rightCurrencyRate) {\n      setRightQuery(\n        (leftQuery * leftCurrencyRate / rightCurrencyRate).toFixed(2),\n      );\n    }\n  }, [leftQuery, leftCurrencyRate]);\n\n  useEffect(() => {\n    if (!rightQuery && leftQuery) {\n      setRightQuery(\n        (leftQuery * leftCurrencyRate / rightCurrencyRate).toFixed(2),\n      );\n    }\n\n    if (rightQuery && leftCurrencyRate) {\n      setLeftQuery(\n        (rightQuery * rightCurrencyRate / leftCurrencyRate).toFixed(2),\n      );\n    }\n  }, [rightQuery, rightCurrencyRate]);\n\n  const usd = data.find(item => item.r030 === 840);\n  const eur = data.find(item => item.r030 === 978);\n\n  return (\n    <>\n      {data.length > 0 && (\n        <div className=\"App\">\n          <header className=\"convert__header\">\n            <div className=\"convert__header--title\">\n              Валютний калькулятор\n            </div>\n            {data.length > 0 && (\n              <div className=\"convert__header--info\">\n                <p>\n                  Наявний курс до UAH\n                </p>\n                <div>\n                  {`USD - ${usd.rate.toFixed(4)}`}\n                  <br />\n                  {`EUR - ${eur.rate.toFixed(4)}`}\n                </div>\n              </div>\n            )}\n          </header>\n\n          <div className=\"convert__container\">\n            <div className=\"convert__item item\">\n              <div className=\"item__query\">\n                {leftQuery !== 0 && leftQuery}\n              </div>\n\n              <div className=\"item__wrapper\">\n                {leftCurrencyRate ? (\n                  <DebounceInput\n                    type=\"text\"\n                    className=\"item__input\"\n                    value={leftQuery}\n                    debounceTimeout={1000}\n                    onChange={(e) => {\n                      setLeftQuery(e.target.value);\n                    }}\n                  />\n                ) : (\n                  <input disabled className=\"item__input\" />\n                )}\n\n                <div className=\"item__wrapper--buttons\">\n                  <button\n                    type=\"button\"\n                    className=\"item__wrapper--button\"\n                    onClick={() => {\n                      if (leftQuery === undefined) {\n                        setLeftQuery(1);\n                      } else {\n                        setLeftQuery(+leftQuery + 1);\n                      }\n                    }}\n                  >\n                    +\n                  </button>\n                  <button\n                    type=\"button\"\n                    className=\"item__wrapper--button\"\n                    onClick={() => {\n                      if (leftQuery - 1 > 0) {\n                        setLeftQuery(+leftQuery - 1);\n                      }\n                    }}\n                  >\n                    -\n                  </button>\n                </div>\n              </div>\n\n              <select\n                className=\"item__select\"\n                onChange={(e) => {\n                  setLeftCurrencyRate((Math.round(e.target.value * 100)) / 100);\n                }}\n              >\n                <option\n                  value={0}\n                  disabled\n                  selected\n                >\n                  Оберіть грошову одиницю\n                </option>\n                <option\n                  value={1}\n                >\n                  Українська гривня\n                </option>\n                {data.map(item => (\n                  <option\n                    value={item.rate}\n                    key={item.r030}\n                  >\n                    {item.txt}\n                  </option>\n                ))}\n              </select>\n            </div>\n\n            <div className=\"convert__item item\">\n              <div className=\"item__query\">\n                {rightQuery !== 0 && rightQuery}\n              </div>\n\n              <div className=\"item__wrapper\">\n                {rightCurrencyRate ? (\n                  <DebounceInput\n                    type=\"text\"\n                    className=\"item__input\"\n                    value={rightQuery}\n                    debounceTimeout={1000}\n                    onChange={(event) => {\n                      setRightQuery(event.target.value);\n                    }}\n                  />\n                ) : (\n                  <input disabled className=\"item__input\" />\n                )}\n\n                <div className=\"item__wrapper--buttons\">\n                  <button\n                    type=\"button\"\n                    className=\"item__wrapper--button\"\n                    onClick={() => {\n                      if (rightQuery === undefined) {\n                        setRightQuery(1);\n                      } else {\n                        setRightQuery(+rightQuery + 1);\n                      }\n                    }}\n                  >\n                    +\n                  </button>\n                  <button\n                    type=\"button\"\n                    className=\"item__wrapper--button\"\n                    onClick={() => {\n                      if (rightQuery - 1 > 0) {\n                        setRightQuery(+rightQuery - 1);\n                      }\n                    }}\n                  >\n                    -\n                  </button>\n                </div>\n              </div>\n\n              <select\n                className=\"item__select\"\n                onChange={(e) => {\n                  setRightCurrencyRate(\n                    (Math.round(e.target.value * 100)) / 100,\n                  );\n                }}\n              >\n                <option\n                  value={0}\n                  disabled\n                  selected\n                >\n                  Оберіть грошову одиницю\n                </option>\n                <option value={1}>Українська гривня</option>\n                {data.map(item => (\n                  <option value={item.rate} key={item.r030}>\n                    {item.txt}\n                  </option>\n                ))}\n              </select>\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}